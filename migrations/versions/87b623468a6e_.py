"""empty message

Revision ID: 87b623468a6e
Revises: 0d1267a7d6e0
Create Date: 2019-05-19 06:10:27.979504

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '87b623468a6e'
down_revision = '0d1267a7d6e0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('course', sa.Column('course_id', sa.String(), nullable=False))
    op.drop_column('course', 'course_ID')
    op.add_column('coursecount', sa.Column('course_id', sa.String(), nullable=False))
    op.drop_constraint(u'coursecount_course_ID_fkey', 'coursecount', type_='foreignkey')
    op.create_foreign_key(None, 'coursecount', 'course', ['course_id'], ['course_id'])
    op.drop_column('coursecount', 'course_ID')
    op.add_column('coursematch', sa.Column('course_id', sa.String(), nullable=False))
    op.add_column('coursematch', sa.Column('tutor_id_1', sa.String(), nullable=False))
    op.add_column('coursematch', sa.Column('tutor_id_2', sa.String(), nullable=True))
    op.drop_constraint(u'coursematch_tutor_ID_1_fkey', 'coursematch', type_='foreignkey')
    op.drop_constraint(u'coursematch_course_ID_fkey', 'coursematch', type_='foreignkey')
    op.drop_constraint(u'coursematch_tutor_ID_2_fkey', 'coursematch', type_='foreignkey')
    op.create_foreign_key(None, 'coursematch', 'tutor', ['tutor_id_1'], ['tutor_id'])
    op.create_foreign_key(None, 'coursematch', 'course', ['course_id'], ['course_id'])
    op.create_foreign_key(None, 'coursematch', 'tutor', ['tutor_id_2'], ['tutor_id'])
    op.drop_column('coursematch', 'course_ID')
    op.drop_column('coursematch', 'tutor_ID_2')
    op.drop_column('coursematch', 'tutor_ID_1')
    op.add_column('courseroom', sa.Column('course_id', sa.String(), nullable=False))
    op.add_column('courseroom', sa.Column('room_id_1', sa.String(), nullable=True))
    op.add_column('courseroom', sa.Column('room_id_2', sa.String(), nullable=True))
    op.drop_constraint(u'courseroom_room_ID_2_fkey', 'courseroom', type_='foreignkey')
    op.drop_constraint(u'courseroom_course_ID_fkey', 'courseroom', type_='foreignkey')
    op.drop_constraint(u'courseroom_room_ID_1_fkey', 'courseroom', type_='foreignkey')
    op.create_foreign_key(None, 'courseroom', 'room', ['room_id_2'], ['room_id'])
    op.create_foreign_key(None, 'courseroom', 'course', ['course_id'], ['course_id'])
    op.create_foreign_key(None, 'courseroom', 'room', ['room_id_1'], ['room_id'])
    op.drop_column('courseroom', 'course_ID')
    op.drop_column('courseroom', 'room_ID_2')
    op.drop_column('courseroom', 'room_ID_1')
    op.add_column('day', sa.Column('day_id', sa.String(), nullable=False))
    op.drop_column('day', 'day_ID')
    op.add_column('room', sa.Column('room_id', sa.String(), nullable=False))
    op.drop_column('room', 'room_ID')
    op.add_column('student', sa.Column('student_firstname', sa.String(), nullable=False))
    op.add_column('student', sa.Column('student_id', sa.String(), nullable=False))
    op.add_column('student', sa.Column('student_lastname', sa.String(), nullable=False))
    op.drop_column('student', 'student_ID')
    op.drop_column('student', 'student_firstName')
    op.drop_column('student', 'student_lastName')
    op.add_column('studentavailability', sa.Column('day_id', sa.String(), nullable=False))
    op.add_column('studentavailability', sa.Column('student_id', sa.String(), nullable=False))
    op.drop_constraint(u'studentavailability_day_ID_fkey', 'studentavailability', type_='foreignkey')
    op.drop_constraint(u'studentavailability_student_ID_fkey', 'studentavailability', type_='foreignkey')
    op.create_foreign_key(None, 'studentavailability', 'day', ['day_id'], ['day_id'])
    op.create_foreign_key(None, 'studentavailability', 'student', ['student_id'], ['student_id'])
    op.drop_column('studentavailability', 'day_ID')
    op.drop_column('studentavailability', 'student_ID')
    op.add_column('studentmatch', sa.Column('student_id', sa.String(), nullable=False))
    op.add_column('studentmatch', sa.Column('tutor_id', sa.String(), nullable=False))
    op.drop_constraint(u'studentmatch_student_ID_fkey', 'studentmatch', type_='foreignkey')
    op.drop_constraint(u'studentmatch_tutor_ID_fkey', 'studentmatch', type_='foreignkey')
    op.create_foreign_key(None, 'studentmatch', 'student', ['student_id'], ['student_id'])
    op.create_foreign_key(None, 'studentmatch', 'tutor', ['tutor_id'], ['tutor_id'])
    op.drop_column('studentmatch', 'student_ID')
    op.drop_column('studentmatch', 'tutor_ID')
    op.add_column('studentpreference', sa.Column('stucourse_id_1', sa.String(), nullable=False))
    op.add_column('studentpreference', sa.Column('stucourse_id_2', sa.String(), nullable=True))
    op.add_column('studentpreference', sa.Column('student_id', sa.String(), nullable=False))
    op.drop_constraint(u'studentpreference_student_ID_fkey', 'studentpreference', type_='foreignkey')
    op.drop_constraint(u'studentpreference_stuCourse_ID_2_fkey', 'studentpreference', type_='foreignkey')
    op.drop_constraint(u'studentpreference_stuCourse_ID_1_fkey', 'studentpreference', type_='foreignkey')
    op.create_foreign_key(None, 'studentpreference', 'student', ['student_id'], ['student_id'])
    op.create_foreign_key(None, 'studentpreference', 'course', ['stucourse_id_2'], ['course_id'])
    op.create_foreign_key(None, 'studentpreference', 'course', ['stucourse_id_1'], ['course_id'])
    op.drop_column('studentpreference', 'student_ID')
    op.drop_column('studentpreference', 'stuCourse_ID_1')
    op.drop_column('studentpreference', 'stuCourse_ID_2')
    op.add_column('tutor', sa.Column('tutor_firstname', sa.String(), nullable=False))
    op.add_column('tutor', sa.Column('tutor_id', sa.String(), nullable=False))
    op.add_column('tutor', sa.Column('tutor_lastname', sa.String(), nullable=False))
    op.drop_column('tutor', 'tutor_lastName')
    op.drop_column('tutor', 'tutor_ID')
    op.drop_column('tutor', 'tutor_firstName')
    op.add_column('tutoravailability', sa.Column('day_id', sa.String(), nullable=False))
    op.add_column('tutoravailability', sa.Column('tutor_id', sa.String(), nullable=False))
    op.drop_constraint(u'tutoravailability_tutor_ID_fkey', 'tutoravailability', type_='foreignkey')
    op.drop_constraint(u'tutoravailability_day_ID_fkey', 'tutoravailability', type_='foreignkey')
    op.create_foreign_key(None, 'tutoravailability', 'tutor', ['tutor_id'], ['tutor_id'])
    op.create_foreign_key(None, 'tutoravailability', 'day', ['day_id'], ['day_id'])
    op.drop_column('tutoravailability', 'day_ID')
    op.drop_column('tutoravailability', 'tutor_ID')
    op.add_column('tutorpreference', sa.Column('tutor_id', sa.String(), nullable=False))
    op.drop_constraint(u'tutorpreference_preference_2_fkey', 'tutorpreference', type_='foreignkey')
    op.drop_constraint(u'tutorpreference_preference_1_fkey', 'tutorpreference', type_='foreignkey')
    op.drop_constraint(u'tutorpreference_tutor_ID_fkey', 'tutorpreference', type_='foreignkey')
    op.create_foreign_key(None, 'tutorpreference', 'tutor', ['tutor_id'], ['tutor_id'])
    op.create_foreign_key(None, 'tutorpreference', 'course', ['preference_1'], ['course_id'])
    op.create_foreign_key(None, 'tutorpreference', 'course', ['preference_2'], ['course_id'])
    op.drop_column('tutorpreference', 'tutor_ID')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tutorpreference', sa.Column('tutor_ID', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'tutorpreference', type_='foreignkey')
    op.drop_constraint(None, 'tutorpreference', type_='foreignkey')
    op.drop_constraint(None, 'tutorpreference', type_='foreignkey')
    op.create_foreign_key(u'tutorpreference_tutor_ID_fkey', 'tutorpreference', 'tutor', ['tutor_ID'], ['tutor_ID'])
    op.create_foreign_key(u'tutorpreference_preference_1_fkey', 'tutorpreference', 'course', ['preference_1'], ['course_ID'])
    op.create_foreign_key(u'tutorpreference_preference_2_fkey', 'tutorpreference', 'course', ['preference_2'], ['course_ID'])
    op.drop_column('tutorpreference', 'tutor_id')
    op.add_column('tutoravailability', sa.Column('tutor_ID', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('tutoravailability', sa.Column('day_ID', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'tutoravailability', type_='foreignkey')
    op.drop_constraint(None, 'tutoravailability', type_='foreignkey')
    op.create_foreign_key(u'tutoravailability_day_ID_fkey', 'tutoravailability', 'day', ['day_ID'], ['day_ID'])
    op.create_foreign_key(u'tutoravailability_tutor_ID_fkey', 'tutoravailability', 'tutor', ['tutor_ID'], ['tutor_ID'])
    op.drop_column('tutoravailability', 'tutor_id')
    op.drop_column('tutoravailability', 'day_id')
    op.add_column('tutor', sa.Column('tutor_firstName', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('tutor', sa.Column('tutor_ID', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('tutor', sa.Column('tutor_lastName', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('tutor', 'tutor_lastname')
    op.drop_column('tutor', 'tutor_id')
    op.drop_column('tutor', 'tutor_firstname')
    op.add_column('studentpreference', sa.Column('stuCourse_ID_2', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('studentpreference', sa.Column('stuCourse_ID_1', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('studentpreference', sa.Column('student_ID', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'studentpreference', type_='foreignkey')
    op.drop_constraint(None, 'studentpreference', type_='foreignkey')
    op.drop_constraint(None, 'studentpreference', type_='foreignkey')
    op.create_foreign_key(u'studentpreference_stuCourse_ID_1_fkey', 'studentpreference', 'course', ['stuCourse_ID_1'], ['course_ID'])
    op.create_foreign_key(u'studentpreference_stuCourse_ID_2_fkey', 'studentpreference', 'course', ['stuCourse_ID_2'], ['course_ID'])
    op.create_foreign_key(u'studentpreference_student_ID_fkey', 'studentpreference', 'student', ['student_ID'], ['student_ID'])
    op.drop_column('studentpreference', 'student_id')
    op.drop_column('studentpreference', 'stucourse_id_2')
    op.drop_column('studentpreference', 'stucourse_id_1')
    op.add_column('studentmatch', sa.Column('tutor_ID', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('studentmatch', sa.Column('student_ID', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'studentmatch', type_='foreignkey')
    op.drop_constraint(None, 'studentmatch', type_='foreignkey')
    op.create_foreign_key(u'studentmatch_tutor_ID_fkey', 'studentmatch', 'tutor', ['tutor_ID'], ['tutor_ID'])
    op.create_foreign_key(u'studentmatch_student_ID_fkey', 'studentmatch', 'student', ['student_ID'], ['student_ID'])
    op.drop_column('studentmatch', 'tutor_id')
    op.drop_column('studentmatch', 'student_id')
    op.add_column('studentavailability', sa.Column('student_ID', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('studentavailability', sa.Column('day_ID', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'studentavailability', type_='foreignkey')
    op.drop_constraint(None, 'studentavailability', type_='foreignkey')
    op.create_foreign_key(u'studentavailability_student_ID_fkey', 'studentavailability', 'student', ['student_ID'], ['student_ID'])
    op.create_foreign_key(u'studentavailability_day_ID_fkey', 'studentavailability', 'day', ['day_ID'], ['day_ID'])
    op.drop_column('studentavailability', 'student_id')
    op.drop_column('studentavailability', 'day_id')
    op.add_column('student', sa.Column('student_lastName', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('student', sa.Column('student_firstName', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('student', sa.Column('student_ID', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('student', 'student_lastname')
    op.drop_column('student', 'student_id')
    op.drop_column('student', 'student_firstname')
    op.add_column('room', sa.Column('room_ID', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('room', 'room_id')
    op.add_column('day', sa.Column('day_ID', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('day', 'day_id')
    op.add_column('courseroom', sa.Column('room_ID_1', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('courseroom', sa.Column('room_ID_2', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('courseroom', sa.Column('course_ID', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'courseroom', type_='foreignkey')
    op.drop_constraint(None, 'courseroom', type_='foreignkey')
    op.drop_constraint(None, 'courseroom', type_='foreignkey')
    op.create_foreign_key(u'courseroom_room_ID_1_fkey', 'courseroom', 'room', ['room_ID_1'], ['room_ID'])
    op.create_foreign_key(u'courseroom_course_ID_fkey', 'courseroom', 'course', ['course_ID'], ['course_ID'])
    op.create_foreign_key(u'courseroom_room_ID_2_fkey', 'courseroom', 'room', ['room_ID_2'], ['room_ID'])
    op.drop_column('courseroom', 'room_id_2')
    op.drop_column('courseroom', 'room_id_1')
    op.drop_column('courseroom', 'course_id')
    op.add_column('coursematch', sa.Column('tutor_ID_1', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('coursematch', sa.Column('tutor_ID_2', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('coursematch', sa.Column('course_ID', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'coursematch', type_='foreignkey')
    op.drop_constraint(None, 'coursematch', type_='foreignkey')
    op.drop_constraint(None, 'coursematch', type_='foreignkey')
    op.create_foreign_key(u'coursematch_tutor_ID_2_fkey', 'coursematch', 'tutor', ['tutor_ID_2'], ['tutor_ID'])
    op.create_foreign_key(u'coursematch_course_ID_fkey', 'coursematch', 'course', ['course_ID'], ['course_ID'])
    op.create_foreign_key(u'coursematch_tutor_ID_1_fkey', 'coursematch', 'tutor', ['tutor_ID_1'], ['tutor_ID'])
    op.drop_column('coursematch', 'tutor_id_2')
    op.drop_column('coursematch', 'tutor_id_1')
    op.drop_column('coursematch', 'course_id')
    op.add_column('coursecount', sa.Column('course_ID', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'coursecount', type_='foreignkey')
    op.create_foreign_key(u'coursecount_course_ID_fkey', 'coursecount', 'course', ['course_ID'], ['course_ID'])
    op.drop_column('coursecount', 'course_id')
    op.add_column('course', sa.Column('course_ID', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('course', 'course_id')
    # ### end Alembic commands ###
